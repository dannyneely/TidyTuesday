```{r}
library(tidytuesdayR)
library(tidymodels)
tt <- tidytuesdayR::tt_load("2020-02-25")

measles <- tt$measles
measles


```

```{r}
#quick EDA
#transmute mutates but does not keep original data
#case when is good for creating a binary dummy var
#mutate if is quick for converting data type
measles_df <- measles %>% 
  filter(mmr>0) %>% 
  transmute(state, mmr_threshold = case_when(mmr > 95~ "Above",
                                      TRUE ~ "Below")) %>% 
  mutate_if(is.character,factor)

#barplot
measles_df %>% 
  group_by(state) %>% 
  summarise(mmr = mean(mmr_threshold == "Above")) %>% 
  mutate(state = fct_reorder(state, mmr)) %>% 
  ggplot(aes(mmr, state, fill = state))+
  geom_col()+
  theme(legend.position = "none")

```

```{r}
#modelling

glm_fit <- logistic_reg() %>% 
  set_engine("glm") %>% 
  fit(mmr_threshold~state, data = measles_df)

new_schools <- tibble(state=unique(measles_df$state))

#for every state, give the prediction if it is above or below
mean_pred <- predict(glm_fit,
                     new_data = new_schools, 
                     type = "prob")

conf_int <- predict(glm_fit,
                    new_data = new_schools, 
                     type = "conf_int")

schools_result <- new_schools %>% 
  bind_cols(mean_pred, conf_int)
schools_result


#plot the proportion and the uncertainty on the proportion
schools_result %>% 
  mutate(state = fct_reorder(state, .pred_Above)) %>% 
  ggplot(aes(state,.pred_Above,fill = state))+
  geom_col()+
  geom_errorbar(aes(ymin = .pred_lower_Above,
                ymax = .pred_upper_Above,
                color = "gray"))+
  theme(legend.position = "none")+
  coord_flip()
  

```


